Title
Abstract
Introduction
Motivation
Background
The details (Implementation)
Evaluation/Discussion
Conclusions and further work (library, conferencing)
Bibliography
(Appendices)

---

Background:

Cosine similarity of definitions
Deep parsing in Watson

---

__Design__
- Platform choice
- System UML Overview
- Game Design Overview
- NLP Techniques used


Overview:
- Chose Android

System Overview:
Explain slot filling approach
NLP techniques (semanitc similarity)

Explain each step in the flow chart in more detail.

Show a UML diagram of the following:
- MainActivity
- VoiceControl
- GameState
- VoiceProcess (actual NLP engine)
- SemanticSimilarity (singleton, mention Android activity states)
Explain each one


Design Patterns:

VoiceProcess:
  POS Tagger:

  SFS: (plus alternative)

  Entity:

  Targets and Contexts:

  ContextActionMap (mention TargetActionMap as an alternative, chose ContextActionMap for game)

  Learning

Semantic Similarity:

Game Design Overview:
- Battle, Overworld, Zork-like
- Show UML class diagram

__Implementation__

UI:

CustomWordNet

Android profiler for performance

CustomWordNet: mention meronyms, holonyms, etc.

__Evaluation__

Mock testing

Evaluation of effectiveness of slot-filling

Evaluation of semantic similarity
(pick action maps to knife instead of grab!)

Evaluation of effectivenesss of learning mechanism

Contributions

- Created GitHub gist (even if I can't get the Gloss working)

__Conclusion and Future Work__

Appendix:
Screeenshots of app
Include github statistics

Note: RRR is a reference location

Fix double quotes
